{"version":3,"sources":["../../controllers/facebookController.js"],"names":["confirmWebhook","request","response","VERIFY_TOKEN","mode","query","token","challenge","status","send","respopnse","checkNLP","nlp","name","entities","handleMessage","all_messages","body","entry","messaging","messages_length","length","i","event","set","sender","id","message","text","downcasedMessage","toLowerCase","split","includes","greeting","confidence"],"mappings":";;;;;;;AAAA;;;;;;eAEe;AACbA,EAAAA,cAAc,EAAE,wBAACC,OAAD,EAAUC,QAAV,EAAuB;AACrC,QAAIC,YAAY,GAAG,WAAnB;AAEA,QAAIC,IAAI,GAAGH,OAAO,CAACI,KAAR,CAAc,UAAd,CAAX;AACA,QAAIC,KAAK,GAAGL,OAAO,CAACI,KAAR,CAAc,kBAAd,CAAZ;AACA,QAAIE,SAAS,GAAGN,OAAO,CAACI,KAAR,CAAc,eAAd,CAAhB;;AAEA,QAAGD,IAAI,IAAIE,KAAX,EAAkB;AAChB,UAAGA,KAAK,KAAKH,YAAb,EAA2B;AACzBD,QAAAA,QAAQ,CAACM,MAAT,CAAgB,GAAhB;AACAN,QAAAA,QAAQ,CAACO,IAAT,CAAcF,SAAd;AACD,OAHD,MAGO;AACLG,QAAAA,SAAS,CAACF,MAAV,CAAiB,GAAjB;AACD;AACF;AACF,GAhBY;AAiBbG,EAAAA,QAAQ,EAAE,kBAACC,GAAD,EAAMC,IAAN,EAAe;AACvB,WAAOD,GAAG,IAAIA,GAAG,CAACE,QAAJ,CAAaD,IAAb,CAAP,IAA6BD,GAAG,CAACE,QAAJ,CAAaD,IAAb,EAAmB,CAAnB,CAApC;AACD,GAnBY;AAqBbE,EAAAA,aAAa,EAAE,uBAACd,OAAD,EAAUC,QAAV,EAAuB;AACpC,QAAIc,YAAY,GAAGf,OAAO,CAACgB,IAAR,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,SAAzC;AACA,QAAIC,eAAe,GAAGJ,YAAY,CAACK,MAAnC;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAApB,EAAqCE,CAAC,EAAtC,EAA0C;AACxC,UAAIC,KAAK,GAAGP,YAAY,CAACM,CAAD,CAAxB;AACApB,MAAAA,QAAQ,CAACM,MAAT,CAAgB,GAAhB;AACAN,MAAAA,QAAQ,CAACsB,GAAT,CAAa,gCAAb;AACAtB,MAAAA,QAAQ,CAACO,IAAT,CAAcc,KAAd;AACA,UAAIE,MAAM,GAAGF,KAAK,CAACE,MAAN,CAAaC,EAA1B;;AAEA,UAAIH,KAAK,CAACI,OAAN,IAAiBF,MAAjB,IAA2BF,KAAK,CAACI,OAAN,CAAcC,IAA7C,EAAmD;AACjD,YAAID,OAAO,GAAGJ,KAAK,CAACI,OAAN,CAAcC,IAA5B;AACA,YAAIC,gBAAgB,GAAGF,OAAO,CAACG,WAAR,GAAsBC,KAAtB,CAA4B,GAA5B,CAAvB;;AAEA,YAAGF,gBAAgB,CAACG,QAAjB,CAA0B,OAA1B,CAAH,EAAuC;AACrC,6CAAiBP,MAAjB,EAAyB,mBAAzB;AACD,SAFD,MAGK;AACH,cAAMQ,QAAQ,GAAG,KAAI,CAACtB,QAAL,CAAcY,KAAK,CAACI,OAApB,EAA6B,WAA7B,CAAjB;;AACA,cAAIM,QAAQ,IAAIA,QAAQ,CAACC,UAAT,GAAsB,GAAtC,EAA2C;AACzC,+CAAiBT,MAAjB,EAAyB,kCAAzB;AACD,WAFD,MAGK;AACH,+CAAiBA,MAAjB,EAAyB,+BAAzB;AACD;AACF;AACF;AACF;AACF;AAlDY,C","sourcesContent":["import sendMessage, {sendMessageAsync} from \"../helpers/sendMessage.js\";\n\nexport default {\n  confirmWebhook: (request, response) => {\n    let VERIFY_TOKEN = \"y-apparel\";\n\n    let mode = request.query[\"hub.mode\"];\n    let token = request.query[\"hub.verify_token\"];\n    let challenge = request.query[\"hub.challenge\"];\n\n    if(mode && token) {\n      if(token === VERIFY_TOKEN) {\n        response.status(200);\n        response.send(challenge);\n      } else {\n        respopnse.status(403);\n      }\n    }\n  },\n  checkNLP: (nlp, name) => {\n    return nlp && nlp.entities[name] && nlp.entities[name][0];\n  },\n\n  handleMessage: (request, response) => {\n    let all_messages = request.body.entry[0].messaging;\n    let messages_length = all_messages.length;\n    \n    for (let i = 0; i < messages_length; i++) {\n      let event = all_messages[i];\n      response.status(200);\n      response.set(\"Content-Type: application/json\");\n      response.send(event);\n      let sender = event.sender.id;\n\n      if (event.message && sender && event.message.text) {\n        let message = event.message.text;\n        let downcasedMessage = message.toLowerCase().split(\" \");\n\n        if(downcasedMessage.includes('yuriy')) {\n          sendMessageAsync(sender, \"Go to hell Yuriy!\");\n        }\n        else {\n          const greeting = this.checkNLP(event.message, \"greetings\");\n          if (greeting && greeting.confidence > 0.8) {\n            sendMessageAsync(sender, \"Hello There. How can I help you?\");\n          }\n          else {\n            sendMessageAsync(sender, \"Sorry couldn't understand you\");\n          }\n        }\n      }\n    }\n  } \n};\n"],"file":"facebookController.js"}